//Write java codes to implement the followings â€“ Methods of Stringbuffer class: append(),capacity(), charAt(), delete(), deleteCharAt().; ensureCapacity(), getChars(), indexOf(), insert(),length(), setCharAt(), setLength(), substring(), toString().
public class StringBufferMethodsExample {
    public static void main(String[] args) {
        // Create a StringBuffer object
        StringBuffer sb = new StringBuffer("Hello");

        // 1. append(): Appends a string to the StringBuffer
        sb.append(" World");
        System.out.println("After append: " + sb); // Output: Hello World

        // 2. capacity(): Returns the current capacity of the StringBuffer
        System.out.println("Capacity: " + sb.capacity()); // Output: Capacity depends on the length and initial capacity

        // 3. charAt(): Returns the character at the specified index
        System.out.println("Character at index 1: " + sb.charAt(1)); // Output: e

        // 4. delete(): Deletes the substring between two specified indexes
        sb.delete(5, 11); // Removes " World"
        System.out.println("After delete: " + sb); // Output: Hello

        // 5. deleteCharAt(): Deletes the character at the specified index
        sb.deleteCharAt(4); // Removes 'o'
        System.out.println("After deleteCharAt: " + sb); // Output: Hell

        // 6. ensureCapacity(): Ensures the StringBuffer has the specified capacity
        sb.ensureCapacity(50); // Increases capacity to 50 if it's less than 50
        System.out.println("After ensureCapacity: " + sb.capacity()); // Output: 50 (or higher depending on the initial capacity)

        // 7. getChars(): Copies characters from the StringBuffer to a char array
        char[] chars = new char[5];
        sb.getChars(0, 4, chars, 0);
        System.out.println("Chars array: " + new String(chars)); // Output: Hell

        // 8. indexOf(): Returns the index of the first occurrence of the specified substring
        int index = sb.indexOf("e");
        System.out.println("Index of 'e': " + index); // Output: 1

        // 9. insert(): Inserts a string at the specified index
        sb.insert(4, "o");
        System.out.println("After insert: " + sb); // Output: Hello

        // 10. length(): Returns the length of the StringBuffer
        System.out.println("Length: " + sb.length()); // Output: 5

        // 11. setCharAt(): Sets the character at the specified index
        sb.setCharAt(4, 'x');
        System.out.println("After setCharAt: " + sb); // Output: Hellx

        // 12. setLength(): Sets the length of the StringBuffer
        sb.setLength(3); // Truncate the StringBuffer to length 3
        System.out.println("After setLength: " + sb); // Output: Hel

        // 13. substring(): Returns a substring of the StringBuffer
        String substring = sb.substring(1, 3); // Extracts substring from index 1 to 2
        System.out.println("Substring: " + substring); // Output: el

        // 14. toString(): Converts the StringBuffer to a String
        String str = sb.toString();
        System.out.println("toString: " + str); // Output: Hel
    }
}
