//Create a general class ThreeDObject and derive the classes Box, Cube, Cylinder and Cone from it.
//The class ThreeDObject has methods wholeSurfaceArea ( ) and volume ( ). Override these two
//methods in each of the derived classes to calculate the volume and whole surface area of each type
//of three-dimensional objects. The dimensions of the objects are to be taken from the users and
//passed through the respective constructors of each derived class. Write a main method to test these
//classes.
import java.util.Scanner;

// Base class: ThreeDObject
class ThreeDObject {
    // Method to calculate the whole surface area (To be overridden in derived classes)
    public double wholeSurfaceArea() {
        return 0.0;
    }

    // Method to calculate the volume (To be overridden in derived classes)
    public double volume() {
        return 0.0;
    }
}

// Derived class: Box (rectangular prism)
class Box extends ThreeDObject {
    double length, width, height;

    // Constructor to initialize the dimensions of the Box
    public Box(double length, double width, double height) {
        this.length = length;
        this.width = width;
        this.height = height;
    }

    // Overriding wholeSurfaceArea() method for Box
    @Override
    public double wholeSurfaceArea() {
        return 2 * (length * width + width * height + length * height);
    }

    // Overriding volume() method for Box
    @Override
    public double volume() {
        return length * width * height;
    }
}

// Derived class: Cube
class Cube extends ThreeDObject {
    double side;

    // Constructor to initialize the side of the Cube
    public Cube(double side) {
        this.side = side;
    }

    // Overriding wholeSurfaceArea() method for Cube
    @Override
    public double wholeSurfaceArea() {
        return 6 * side * side;
    }

    // Overriding volume() method for Cube
    @Override
    public double volume() {
        return side * side * side;
    }
}

// Derived class: Cylinder
class Cylinder extends ThreeDObject {
    double radius, height;

    // Constructor to initialize the dimensions of the Cylinder
    public Cylinder(double radius, double height) {
        this.radius = radius;
        this.height = height;
    }

    // Overriding wholeSurfaceArea() method for Cylinder
    @Override
    public double wholeSurfaceArea() {
        return 2 * Math.PI * radius * (radius + height);
    }

    // Overriding volume() method for Cylinder
    @Override
    public double volume() {
        return Math.PI * radius * radius * height;
    }
}

// Derived class: Cone
class Cone extends ThreeDObject {
    double radius, height;

    // Constructor to initialize the dimensions of the Cone
    public Cone(double radius, double height) {
        this.radius = radius;
        this.height = height;
    }

    // Overriding wholeSurfaceArea() method for Cone
    @Override
    public double wholeSurfaceArea() {
        double slantHeight = Math.sqrt(radius * radius + height * height);
        return Math.PI * radius * (radius + slantHeight);
    }

    // Overriding volume() method for Cone
    @Override
    public double volume() {
        return (1.0 / 3) * Math.PI * radius * radius * height;
    }
}

// Main class to test the functionality
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Box input and calculation
        System.out.println("Enter dimensions for Box:");
        System.out.print("Length: ");
        double boxLength = scanner.nextDouble();
        System.out.print("Width: ");
        double boxWidth = scanner.nextDouble();
        System.out.print("Height: ");
        double boxHeight = scanner.nextDouble();
        Box box = new Box(boxLength, boxWidth, boxHeight);
        System.out.println("Box Surface Area: " + box.wholeSurfaceArea());
        System.out.println("Box Volume: " + box.volume());

        // Cube input and calculation
        System.out.println("\nEnter side length for Cube:");
        System.out.print("Side: ");
        double cubeSide = scanner.nextDouble();
        Cube cube = new Cube(cubeSide);
        System.out.println("Cube Surface Area: " + cube.wholeSurfaceArea());
        System.out.println("Cube Volume: " + cube.volume());

        // Cylinder input and calculation
        System.out.println("\nEnter dimensions for Cylinder:");
        System.out.print("Radius: ");
        double cylinderRadius = scanner.nextDouble();
        System.out.print("Height: ");
        double cylinderHeight = scanner.nextDouble();
        Cylinder cylinder = new Cylinder(cylinderRadius, cylinderHeight);
        System.out.println("Cylinder Surface Area: " + cylinder.wholeSurfaceArea());
        System.out.println("Cylinder Volume: " + cylinder.volume());

        // Cone input and calculation
        System.out.println("\nEnter dimensions for Cone:");
        System.out.print("Radius: ");
        double coneRadius = scanner.nextDouble();
        System.out.print("Height: ");
        double coneHeight = scanner.nextDouble();
        Cone cone = new Cone(coneRadius, coneHeight);
        System.out.println("Cone Surface Area: " + cone.wholeSurfaceArea());
        System.out.println("Cone Volume: " + cone.volume());

        scanner.close();
    }
}
